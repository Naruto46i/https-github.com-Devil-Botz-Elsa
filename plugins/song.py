import asyncio
import os
import re
from pyrogram import Client, filters
from pytube import YouTube
from youtube_search import YoutubeSearch


@Client.on_message(filters.command(["song"]))
async def download_song(client, message):
    # Check if the user has provided a song name
    if len(message.text.split()) < 2:
        await message.reply("·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥õ ú·¥á s·¥è…¥…¢ …¥·¥Ä·¥ç·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ")
        return

    song_name = message.text.split()[1:]  # Extract the song name parts into a list
    song_name = " ".join(song_name)  # Combine the song name parts into a single string

    # Send "Searching..." message before searching
    await message.reply("‚è≥")

    # Search for the song on YouTube
    search_results = YoutubeSearch(song_name, max_results=1).to_dict()
    if not search_results:
        await message.reply("…¥·¥è s·¥è…¥…¢ “ì·¥è·¥ú…¥·¥Ö ·¥°…™·¥õ ú ·¥õ ú·¥Ä·¥õ …¥·¥Ä·¥ç·¥á")
        return

    song_url = search_results[0]["url_suffix"]
    song_title = search_results[0]["title"]
    duration = search_results[0]["duration"]

    # Download the song using pytube
    yt = YouTube(f"https://www.youtube.com{song_url}")
    audio_streams = yt.streams.filter(only_audio=True)

    if not audio_streams:
        await message.reply("…¥·¥è ·¥Ä·¥ú·¥Ö…™·¥è s·¥õ Ä·¥á·¥Ä·¥ç “ì·¥è·¥ú…¥·¥Ö “ì·¥è Ä ·¥õ ú·¥á s·¥ò·¥á·¥Ñ…™“ì…™·¥á·¥Ö ·¥†…™·¥Ö·¥á·¥è")
        return

    video = audio_streams.first()
    audio_filename = f"{song_title}.mp3"

    try:
        video.download(filename=audio_filename)

        # Prepare message caption with title, duration, and YouTube link
        caption = f"**üéß {song_title}**\n" + \
                    f"üïõ ·¥Ö·¥ú Ä·¥Ä·¥õ…™·¥è…¥: {duration}\n" + \
                    f"üåø  è·¥è·¥ú ·¥õ·¥ú ô·¥á: <a href='https://www.youtube.com{song_url}'> è·¥è·¥ú ·¥õ·¥ú ô·¥á</a>"

        # Send downloaded song with caption
        await message.reply_audio(audio_filename, caption=caption)

        # Delete the downloaded song after sending it
        os.remove(audio_filename)

    except Exception as e:
        await message.reply(f"·¥á Ä Ä·¥è Ä ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö…™…¥…¢ s·¥è…¥…¢: {e}")

